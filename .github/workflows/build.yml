name: Bygg og deploy

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE: europe-north1-docker.pkg.dev/${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}/helseopplysninger/${{ github.event.repository.name }}

jobs:
  bygg:
    env:
      GITHUB_TOKEN: ${{ github.token }}
    permissions:
      packages: write
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.kompiler.outputs.image }}
    steps:
      - name: Sjekker ut kode
        uses: actions/checkout@v4

      - name: Setter tag-navn
        run: echo "TAG=$(date +%Y.%m.%d.%H%M%S)-$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_ENV

      - name: Login GAR
        uses: nais/login@v0
        with:
          project_id: ${{vars.NAIS_MANAGEMENT_PROJECT_ID}}
          identity_provider: ${{secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER}}
          team: helseopplysninger

      - name: Setter opp Java 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle

      - name: Kompilerer, bygger  og pusher image
        id: kompiler
        run: |
          echo "image=${{env.IMAGE}}:${{env.TAG}}" >> $GITHUB_OUTPUT
          ./gradlew -Dspring.profiles.active=local -DGAR_TOKEN=${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} -Djib.to.image=${{env.IMAGE}}:${{env.TAG}} -Djib.to.tags=latest,${TAG} -Drevision=${TAG}  jib cyclonedxBom 
          echo "DIGEST=$(cat build/jib-image.digest)" >> $GITHUB_ENV

      - name: Attest and sign
        uses: nais/attest-sign@v1.5.8
        with:
          image_ref: ${{env.IMAGE}}@${{env.DIGEST}}
          sbom: build/reports/application.cdx.json
  deploy:
    permissions:
      contents: write
      id-token: write
    strategy:
      matrix:
        cluster: [ dev-gcp ]
    name: Deploy til ${{matrix.cluster}}
    needs: bygg
    runs-on: ubuntu-latest
    environment: ${{matrix.cluster}}:helseopplysninger
    env:
      PRINT_PAYLOAD: true
      TIMEOUT: 30m
      RESOURCE: .nais/naiserator.yaml
      VARS: .nais/vars.json
      CLUSTER: ${{matrix.cluster}}
      IMAGE: ${{needs.bygg.outputs.image}}
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2